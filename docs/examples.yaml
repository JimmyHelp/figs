---

log:
    content: log(60, "abc")
    author: applejuice



logJson:
    content: logJson('{"text":"meow ^^","color":"#a672ef"}')
    author: ChloeSpacedOut



logTable:
    content: |-
      local table = {'string',{'tableception'}}
      
      logTable(table,2)
    author: ChloeSpacedOut



print:
    content: print(60, "abc")
    author: ChloeSpacedOut



printJson:
    content: printJson('{"text":"meow ^^","color":"#a672ef"}')
    author: ChloeSpacedOut



printTable:
    content: |-
      local table = {'string',{'tableception'}}
      
      printTable(table,2)
    author: ChloeSpacedOut



require:
    content: |- 
      local library = require("lib.parser") 
      -- this will import a file
    author: ChloeSpacedOut



ActionWheelAPI.execute:
    content: |-
      examplePage = action_wheel:createPage()
      action_wheel:setPage(examplePage)
      examplePage:newAction(1):onRightClick(function() log('chat spam :3') end)

      events.TICK:register(function()
        action_wheel:execute(1,true)
      end)
      -- this will only run if the action wheel is open
    author: ChloeSpacedOut



ActionWheelAPI.isEnabled:
    content: |-
      examplePage = action_wheel:createPage()
      action_wheel:setPage(examplePage)

      events.TICK:register(function()
        if action_wheel:isEnabled() then
          log("action wheel's is open!")
        end
      end)
    author: ChloeSpacedOut



ActionWheelAPI.getPage:
    content: |-
      action_wheel:createPage('examplePage')
      log(action_wheel:getPage('examplePage'))
    author: ChloeSpacedOut


# ######################################################
# ######################################################
# ######################################################
# examples differ between the rc-11 to rc-12 transition!
# previous
ActionWheelAPI.createPage:
    content: action_wheel:createPage('examplePage')
    author: ChloeSpacedOut
    versions:
      - "<rc-12"


# after
ActionWheelAPI.newPage:
    content: action_wheel:newPage('examplePage')
    author: ChloeSpacedOut
    versions:
      - ">=rc-12"

# ######################################################
# ######################################################
# ######################################################



ActionWheelAPI.getSelected:
    content: |-
      examplePage = action_wheel:createPage()
      action_wheel:setPage(examplePage)
      for slot = 1,8 do
        examplePage:newAction(slot)
      end

      events.TICK:register(function()
        log(action_wheel:getSelected())
      end)
      -- returns even if the action wheel is closed
    author: ChloeSpacedOut



ActionWheelAPI.setPage:
    content: |-
      examplePage = action_wheel:createPage()
      action_wheel:setPage(examplePage)
    author: ChloeSpacedOut



ActionWheelAPI.leftClick:
    content: |-
      examplePage = action_wheel:createPage('pageName')
        action_wheel:setPage(examplePage)
  
      function action_wheel.leftClick()
        log('you just left clicked while in the action wheel!')
      end
    author: ChloeSpacedOut



ActionWheelAPI.rightClick:
    content: |-
      examplePage = action_wheel:createPage('pageName')
        action_wheel:setPage(examplePage)
  
      function action_wheel.rightClick()
        log('you just left clicked while in the action wheel!')
      end
    author: ChloeSpacedOut



ActionWheelAPI.scroll:
    content: |-
      examplePage = action_wheel:createPage('pageName')
      action_wheel:setPage(examplePage)

      function action_wheel.scroll(direction)
        log(direction)
      end
    author: ChloeSpacedOut



ClientAPI.getVersion:
    content: log(client.getVersion())
    author: ChloeSpacedOut



ClientAPI.getParticleCount:
    content: |-
      events.TICK:register(function()
        log(client.getParticleCount())
      end)
    author: ChloeSpacedOut



ClientAPI.getJavaVersion:
    content: log(client.getJavaVersion())
    author: ChloeSpacedOut



ClientAPI.getAllocatedMemory:
    content: |-
      log(client.getAllocatedMemory())
      -- returns memory in bytes
    author: ChloeSpacedOut



ClientAPI.getVersionType:
    content: log(client.getVersionType())
    author: ChloeSpacedOut



ClientAPI.getCurrentEffect:
    content: |-
      events.TICK:register(function()
        log(client.getCurrentEffect())
      end)
    author: ChloeSpacedOut



ClientAPI.getUsedMemory:
    content: |-
      events.TICK:register(function()
        log(client.getUsedMemory())
      end)
      -- returns memory in bytes
    author: ChloeSpacedOut



ClientAPI.isPaused:
    content: |-
      events.TICK:register(function()
        log(client.isPaused())
      end)
    author: ChloeSpacedOut



ClientAPI.getMaxMemory:
    content: |-
      log(client.getMaxMemory())
      -- returns memory in bytes
    author: ChloeSpacedOut



ClientAPI.getServerBrand:
    content: log(client.getServerBrand())
    author: ChloeSpacedOut



ClientAPI.getEntityCount:
    content: |-
      events.TICK:register(function()
        log(client.getEntityCount())
      end)
    author: ChloeSpacedOut



ClientAPI.getSoundStatistics:
    content: |-
      events.TICK:register(function()
        log(client.getSoundStatistics())
      end)
      -- sounds playing / sounds limit + ambient sounds playing / ambient sounds limit
    author: ChloeSpacedOut



ClientAPI.getChunkStatistics:
    content: |-
      log(client.getChunkStatistics())
      -- Number of chunk sections rendered / the total number of chunk sections in the loaded area
    author: ChloeSpacedOut



ClientAPI.getFPS:
    content: |-
      events.TICK:register(function()
        log(client.getFPS())
      end)
    author: ChloeSpacedOut



ClientAPI.getFPSString:
    content: |-
      events.TICK:register(function()
        log(client.getFPSString())
      end)
    author: ChloeSpacedOut



ClientAPI.getTextHeight:
    content: log(client.getTextHeight('TEXT!'))
    author: ChloeSpacedOut



ClientAPI.getSystemTime:
    content: |-
      events.TICK:register(function()
        log(client.getSystemTime())
      end)
    author: ChloeSpacedOut


ClientAPI.getActiveLang:
    content: log(client.getActiveLang())
    author: ChloeSpacedOut



ClientAPI.isWindowFocused:
    content: |-
      events.TICK:register(function()
        log(client.isWindowFocused())
      end)
    author: ChloeSpacedOut



ClientAPI.isHudEnabled:
    content: |-
      events.TICK:register(function()
        log(client.isHudEnabled())
      end)
    author: ChloeSpacedOut



ClientAPI.getMousePos:
    content: |-
      events.TICK:register(function()
        log(client.getMousePos())
      end)
    author: ChloeSpacedOut



ClientAPI.getTextWidth:
    content: log(client.getTextWidth('TEXT!'))
    author: ChloeSpacedOut



ClientAPI.getCameraPos:
    content: |-
      events.TICK:register(function()
        log(client.getCameraPos())
      end)
    author: ChloeSpacedOut



ClientAPI.getFOV:
    content: log(client.getFOV())
    author: ChloeSpacedOut



ClientAPI.getWindowSize:
    content: |-
      events.TICK:register(function()
        log(client.getWindowSized())
      end)
    author: ChloeSpacedOut



ClientAPI.getCameraRot:
    content: |-
      events.TICK:register(function()
        log(client.getCameraRot())
      end)
    author: ChloeSpacedOut



ClientAPI.getGuiScale:
    content: log(client.getGuiScale())
    author: ChloeSpacedOut



ClientAPI.getEntityStatistics:
    content: |- 
      log(client.getEntityStatistics())
      -- Number of rendered entities / total entities, 0, simulation distance
    author: ChloeSpacedOut



ClientAPI.isDebugOverlayEnabled:
    content: |-
      events.TICK:register(function()
        log(client.isDebugOverlayEnabled())
      end)
    author: ChloeSpacedOut



ClientAPI.getScaledWindowSize:
    content: |-
      events.TICK:register(function()
        log(client.getScaledWindowSize())
      end)
    author: ChloeSpacedOut




Page.getAction:
    content: local action = myPage:getAction(1)
    author: applejuice





# ######################################################
# ######################################################
# ######################################################
# examples differ between the rc-9 to rc-10 transition!
# previous
ClickAction.onRightClick:
    content: |-
      local myAction = myPage:newAction()

      myAction:onRightClick(function()
          log("Heheh I got Right Clicked!")
      end)
    author: applejuice
    versions:
      - <rc-10



ClickAction.onLeftClick:
    content: |-
      local myAction = myPage:newAction()

      myAction:onLeftClick(function()
          log("Heheh I got Left Clicked!")
      end)
    author: applejuice
    versions:
      - <rc-10


# after
Action.onRightClick:
    content: |-
      local myAction = myPage:newAction()

      myAction:onRightClick(function()
          log("Heheh I got Right Clicked!")
      end)
    author: applejuice
    versions:
      - ">=rc-10"



Action.onLeftClick:
    content: |-
      local myAction = myPage:newAction()

      myAction:onLeftClick(function()
          log("Heheh I got Left Clicked!")
      end)
    author: applejuice
    versions:
      - ">=rc-10"

# ######################################################
# ######################################################
# ######################################################





Animation.play:
    content: animations.bbmodelName.animationName:play()
    author: JimmyHelp

SoundAPI.playSound:
    content: sounds:playSound("entity.bat.ambient", player:getPos(),1,1,false)
    author: JimmyHelp

PlayerAPI.getExperienceProgress:
    content: |-
             if player:getExperienceProgress() > .5 then
                log("You're over halfway to the next level")
              end
    author: JimmyHelp
    
PlayerAPI.getSaturation:
    content: |-
              if player:getSaturation() == 20 then
                log("Your saturation is 20")
              end
    author: JimmyHelp
    
PlayerAPI.getFood:
    content: |-
              if player:getFood() == 0 then
                log("You're starving")
              end
    author: JimmyHelp
    
PlayerAPI.getExperienceLevel:
    content: |-
              if player:getExperienceLevel() == 30 then
                log("You have 30 levels")
              end
    author: JimmyHelp
    
PlayerAPI.isFlying:
    content: |-
              if player:isFlying() then
                log("You're flying")
              end
    author: JimmyHelp
    
PlayerAPI.getModelType:
    content: |-
              if player:getModelType() == "DEFAULT" then
                log("You're Steve")
              end
    author: JimmyHelp
    
PlayerAPI.isSkinLayerVisible:
    content: |-
              if player:isSkinLayerVisible("HAT") then
                log("Your hat's on")
              end
    author: JimmyHelp
    
PlayerAPI.getGamemode:
    content: |-
              if player:getGamemode() and player:getGamemode() == "SURVIVAL" then
                log("You're in survival mode")
              end
    author: JimmyHelp
        
PlayerAPI.getBodyYaw:
    content: models:setRot(0,player:getBodyYaw())
    author: JimmyHelp
            
PlayerAPI.getActiveItem:
    content: |-
              if player:getActiveItem().id == "minecraft:bow" then
                log("You're drawing back a bow")
              end
    author: JimmyHelp
            
PlayerAPI.getHealth:
    content: |-
              if player:getHealth() == 20 then
                log("You're at full health")
              end
    author: JimmyHelp
            
PlayerAPI.getHeldItem:
    content: |-
              if player:getHeldItem(false).id == "minecraft:diamond_sword" then
                log("You're holding a diamond sword")
              end
    author: JimmyHelp
            
PlayerAPI.isLeftHanded:
    content: |-
              if player:isLeftHanded() then
                log("You're left handed")
              end
    author: JimmyHelp
            
PlayerAPI.getActiveHand:
    content: |-
              if player:getActiveHand() == "MAIN_HAND" then
                log("You're using your main hand")
              end
    author: JimmyHelp
            
PlayerAPI.getArmor:
    content: |-
              if player:getArmor() == 20 then
                log("You have max armor points")
              end
    author: JimmyHelp
            
PlayerAPI.getArrowCount:
    content: |-
              if player:getArrowCount() > 0 then
                log("You've been shot")
              end
    author: JimmyHelp
    
PlayerAPI.isClimbing:
    content: |-
              if player:isClimbing() then
                log("You're climbing")
              end
    author: JimmyHelp
            
PlayerAPI.isUsingItem:
    content: |-
              if player:isUsingItem() then
                log("You're using an item")
              end
    author: JimmyHelp
                
PlayerAPI.getDeathTime:
    content: |-
              if player:getDeathTime() > 0 then
                log("You're dead")
              end
    author: JimmyHelp
                
PlayerAPI.getStingerCount:
    content: |-
              if player:getStingerCount() > 0 then
                log("You've been stung")
              end
    author: JimmyHelp
                
PlayerAPI.getMaxHealth:
    content: |-
              if player:getMaxHealth() == 20 then
                log("You're healthy")
              end
    author: JimmyHelp
                
PlayerAPI.getStatusEffects:
    content: |-
        for i, effect in ipairs(player:getStatusEffects()) do
            if effect.name == "effect.minecraft.night_vision" then
                log("Night vision")
            end
        end
    author: JimmyHelp
    versions:
      - "<rc-13"
                
PlayerAPI.getName:
    content: |-
              if player:getName() == "JimmyHelp" then
                log("You're... me?")
              end
    author: JimmyHelp
                
PlayerAPI.getType:
    content: |-
              if player:getType() == "minecraft:player" then
                log("You're a player")
              end
    author: JimmyHelp
                
PlayerAPI.isLoaded:
    content: |-
              if player:isLoaded() then
                log("You're being loaded")
              end
    author: JimmyHelp
                
PlayerAPI.getItem:
    content: |-
              if player:getItem(5).id == "minecraft:elytra" then
                log("You're wearing an elytra")
              end
    author: JimmyHelp
                
PlayerAPI.getRot:
    content: models:setRot(player:getRot())
    author: JimmyHelp
                
PlayerAPI.getFireTicks:
    content: |-
              if player:getFireTicks() == 1 then
                log("You're in a fire (returns -20 if not in a fire, the description is misleading)")
              end
    author: JimmyHelp
                
PlayerAPI.getFrozenTicks:
    content: |-
              if player:getFrozenTicks() == 140 then
                log("You're being frozen solid")
              end
    author: JimmyHelp
                
PlayerAPI.getPos:
    content: models:setPos(player:getPos())
    author: JimmyHelp
                
PlayerAPI.getLookDir:
    content: models:setRot(player:getLookDir())
    author: JimmyHelp
                
PlayerAPI.getMaxAir:
    content: |-
              if player:getMaxAir() == 300 then
                log("You've got healthy lungs")
              end
    author: JimmyHelp
                
PlayerAPI.isHamburger:
    content: |-
              if player:isHamburger() then
                log("You're hamburger")
              end
    author: JimmyHelp
                
PlayerAPI.getDimensionName:
    content: |-
              if player:getDimensionName() == "minecraft:overworld" then
                log("You're in the Overworld")
              end
    author: JimmyHelp
                
PlayerAPI.getAir:
    content: |-
              if player:getAir() < 0 then
                log("You're drowning")
              end
    author: JimmyHelp
                
PlayerAPI.getVelocity:
    content: |-
              if player:getVelocity():length() > 0 then
                log("You're moving in any direction")
              end
    author: JimmyHelp
                
PlayerAPI.getUUID:
    content: |-
              if player:getUUID() == "5003b2ce-7a8d-4c56-8b91-ec705985fe08" then
                log("You're... me?")
              end
    author: JimmyHelp
                    
PlayerAPI.hasAvatar:
    content: |-
              if player:hasAvatar() then
                log("You have an avatar")
              end
    author: JimmyHelp
                    
PlayerAPI.getBoundingBox:
    content: log(player:getBoundingBox())
    author: JimmyHelp
                        
PlayerAPI.isGlowing:
    content: |-
              if player:isGlowing() then
                log("You're glowing")
              end
    author: JimmyHelp
                        
PlayerAPI.getEyeY:
    content: models:setPos(0,player:getEyeY())
    author: JimmyHelp
                        
PlayerAPI.getEyeHeight:
    content: models:setPos(0,player:getEyeHeight())
    author: JimmyHelp
                        
PlayerAPI.getVehicle:
    content: |-
              if player:getVehicle() and player:getVehicle():getType() == "minecraft:pig" then
                log("You're riding a pig")
              end
    author: JimmyHelp
                            
PlayerAPI.isOnGround:
    content: |-
              if player:isOnGround() then
                log("You're on the ground")
              end
    author: JimmyHelp
                            
PlayerAPI.isInvisible:
    content: |-
              if player:isInvisible() then
                log("You're invisible")
              end
    author: JimmyHelp
                            
PlayerAPI.getPose:
    content: |-
              if player:getPose() == "CROUCHING" then
                log("You're crouching")
              end
    author: JimmyHelp
                            
PlayerAPI.isSprinting:
    content: |-
              if player:isSprinting() then
                log("You're sprinting")
              end
    author: JimmyHelp
                            
PlayerAPI.isSilent:
    content: |-
              if player:isSilent() then
                log("You're silent")
              end
    author: JimmyHelp
                            
PlayerAPI.isSneaking:
    content: |-
              if player:isSneaking() then
                log("You're sneaking")
              end
    author: JimmyHelp
                            
PlayerAPI.isInLava:
    content: |-
              if player:isInLava() then
                log("You're in lava")
              end
    author: JimmyHelp
                            
PlayerAPI.isInWater:
    content: |-
              if player:isInWater() then
                log("You're in water")
              end
    author: JimmyHelp
                            
PlayerAPI.isUnderwater:
    content: |-
              if player:isUnderwater() then
                log("You're underwater")
              end
    author: JimmyHelp
                            
PlayerAPI.isInRain:
    content: |-
              if player:isInRain() then
                log("You're in rain")
              end
    author: JimmyHelp
                            
PlayerAPI.isWet:
    content: |-
              if player:isWet() then
                log("You're touching water")
              end
    author: JimmyHelp
                            
PlayerAPI.isOnFire:
    content: |-
              if player:isOnFire() then
                log("You're on fire")
              end
    author: JimmyHelp
                            
PlayerAPI.getTargetedBlock:
    content: |-
              if player:getTargetedBlock(true,4.5).id == "minecraft:grass_block" then
                log("You're looking at grass")
              end
    author: JimmyHelp
